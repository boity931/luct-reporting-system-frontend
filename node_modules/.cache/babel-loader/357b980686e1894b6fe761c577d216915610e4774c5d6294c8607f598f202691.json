{"ast":null,"code":"var _jsxFileName = \"C:\\\\Users\\\\Tech Semiconductors\\\\luct-reporting-system\\\\frontend\\\\src\\\\components\\\\Login.js\",\n  _s = $RefreshSig$();\nimport React, { useState, useEffect } from 'react';\nimport { useNavigate } from 'react-router-dom';\nimport axios from 'axios';\nimport { Form, Button, Card } from 'react-bootstrap';\nimport { jwtDecode } from 'jwt-decode'; // <-- named import\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nconst Login = ({\n  setRole\n}) => {\n  _s();\n  const [formData, setFormData] = useState({\n    username: '',\n    password: ''\n  });\n  const [usernames, setUsernames] = useState([]);\n  const navigate = useNavigate();\n\n  // Fetch available usernames on component mount\n  useEffect(() => {\n    const fetchUsernames = async () => {\n      try {\n        const res = await axios.get(`${process.env.REACT_APP_API_URL}/auth/users`);\n        setUsernames(res.data.map(user => user.username));\n      } catch (err) {\n        console.error('Error fetching usernames:', err);\n      }\n    };\n    fetchUsernames();\n  }, []);\n  const onChange = e => {\n    setFormData({\n      ...formData,\n      [e.target.name]: e.target.value\n    });\n  };\n  const onSubmit = async e => {\n    e.preventDefault();\n    try {\n      const res = await axios.post(`${process.env.REACT_APP_API_URL}/auth/login`, formData);\n      localStorage.setItem('token', res.data.token);\n      const decoded = jwtDecode(res.data.token);\n      setRole(decoded.role);\n      navigate('/reports');\n    } catch (err) {\n      console.error(err);\n      alert('Login failed. Check username/password or server.');\n    }\n  };\n  return /*#__PURE__*/_jsxDEV(Card, {\n    className: \"p-4 report-form\",\n    children: [/*#__PURE__*/_jsxDEV(\"h2\", {\n      children: \"Login\"\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 45,\n      columnNumber: 7\n    }, this), /*#__PURE__*/_jsxDEV(Form, {\n      onSubmit: onSubmit,\n      children: [/*#__PURE__*/_jsxDEV(Form.Group, {\n        controlId: \"username\",\n        className: \"mb-3\",\n        children: [/*#__PURE__*/_jsxDEV(Form.Label, {\n          children: \"Username\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 48,\n          columnNumber: 11\n        }, this), /*#__PURE__*/_jsxDEV(Form.Select, {\n          name: \"username\",\n          value: formData.username,\n          onChange: onChange,\n          required: true,\n          children: [/*#__PURE__*/_jsxDEV(\"option\", {\n            value: \"\",\n            children: \"Select a username\"\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 55,\n            columnNumber: 13\n          }, this), usernames.map((username, index) => /*#__PURE__*/_jsxDEV(\"option\", {\n            value: username,\n            children: username\n          }, index, false, {\n            fileName: _jsxFileName,\n            lineNumber: 57,\n            columnNumber: 15\n          }, this))]\n        }, void 0, true, {\n          fileName: _jsxFileName,\n          lineNumber: 49,\n          columnNumber: 11\n        }, this)]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 47,\n        columnNumber: 9\n      }, this), /*#__PURE__*/_jsxDEV(Form.Group, {\n        controlId: \"password\",\n        className: \"mb-3\",\n        children: [/*#__PURE__*/_jsxDEV(Form.Label, {\n          children: \"Password\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 62,\n          columnNumber: 11\n        }, this), /*#__PURE__*/_jsxDEV(Form.Control, {\n          type: \"password\",\n          name: \"password\",\n          value: formData.password,\n          onChange: onChange,\n          required: true\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 63,\n          columnNumber: 11\n        }, this)]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 61,\n        columnNumber: 9\n      }, this), /*#__PURE__*/_jsxDEV(Button, {\n        variant: \"primary\",\n        type: \"submit\",\n        children: \"Login\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 71,\n        columnNumber: 9\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 46,\n      columnNumber: 7\n    }, this)]\n  }, void 0, true, {\n    fileName: _jsxFileName,\n    lineNumber: 44,\n    columnNumber: 5\n  }, this);\n};\n_s(Login, \"tr/XYPJhz+ol6pZcTo3Gfb1nkMU=\", false, function () {\n  return [useNavigate];\n});\n_c = Login;\nexport default Login;\nvar _c;\n$RefreshReg$(_c, \"Login\");","map":{"version":3,"names":["React","useState","useEffect","useNavigate","axios","Form","Button","Card","jwtDecode","jsxDEV","_jsxDEV","Login","setRole","_s","formData","setFormData","username","password","usernames","setUsernames","navigate","fetchUsernames","res","get","process","env","REACT_APP_API_URL","data","map","user","err","console","error","onChange","e","target","name","value","onSubmit","preventDefault","post","localStorage","setItem","token","decoded","role","alert","className","children","fileName","_jsxFileName","lineNumber","columnNumber","Group","controlId","Label","Select","required","index","Control","type","variant","_c","$RefreshReg$"],"sources":["C:/Users/Tech Semiconductors/luct-reporting-system/frontend/src/components/Login.js"],"sourcesContent":["import React, { useState, useEffect } from 'react';\r\nimport { useNavigate } from 'react-router-dom';\r\nimport axios from 'axios';\r\nimport { Form, Button, Card } from 'react-bootstrap';\r\nimport { jwtDecode } from 'jwt-decode'; // <-- named import\r\n\r\nconst Login = ({ setRole }) => {\r\n  const [formData, setFormData] = useState({ username: '', password: '' });\r\n  const [usernames, setUsernames] = useState([]);\r\n  const navigate = useNavigate();\r\n\r\n  // Fetch available usernames on component mount\r\n  useEffect(() => {\r\n    const fetchUsernames = async () => {\r\n      try {\r\n        const res = await axios.get(`${process.env.REACT_APP_API_URL}/auth/users`);\r\n        setUsernames(res.data.map(user => user.username));\r\n      } catch (err) {\r\n        console.error('Error fetching usernames:', err);\r\n      }\r\n    };\r\n    fetchUsernames();\r\n  }, []);\r\n\r\n  const onChange = e => {\r\n    setFormData({ ...formData, [e.target.name]: e.target.value });\r\n  };\r\n\r\n  const onSubmit = async e => {\r\n    e.preventDefault();\r\n    try {\r\n      const res = await axios.post(`${process.env.REACT_APP_API_URL}/auth/login`, formData);\r\n      localStorage.setItem('token', res.data.token);\r\n      const decoded = jwtDecode(res.data.token);\r\n      setRole(decoded.role);\r\n      navigate('/reports');\r\n    } catch (err) {\r\n      console.error(err);\r\n      alert('Login failed. Check username/password or server.');\r\n    }\r\n  };\r\n\r\n  return (\r\n    <Card className=\"p-4 report-form\">\r\n      <h2>Login</h2>\r\n      <Form onSubmit={onSubmit}>\r\n        <Form.Group controlId=\"username\" className=\"mb-3\">\r\n          <Form.Label>Username</Form.Label>\r\n          <Form.Select\r\n            name=\"username\"\r\n            value={formData.username}\r\n            onChange={onChange}\r\n            required\r\n          >\r\n            <option value=\"\">Select a username</option>\r\n            {usernames.map((username, index) => (\r\n              <option key={index} value={username}>{username}</option>\r\n            ))}\r\n          </Form.Select>\r\n        </Form.Group>\r\n        <Form.Group controlId=\"password\" className=\"mb-3\">\r\n          <Form.Label>Password</Form.Label>\r\n          <Form.Control\r\n            type=\"password\"\r\n            name=\"password\"\r\n            value={formData.password}\r\n            onChange={onChange}\r\n            required\r\n          />\r\n        </Form.Group>\r\n        <Button variant=\"primary\" type=\"submit\">Login</Button>\r\n      </Form>\r\n    </Card>\r\n  );\r\n};\r\n\r\nexport default Login;\r\n\r\n\r\n\r\n"],"mappings":"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","ignoreList":[]},"metadata":{},"sourceType":"module","externalDependencies":[]}